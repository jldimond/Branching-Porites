plot(counts2_cpm[,5], counts2_cpm[,6])
plot(counts2_cpm[,7], counts2_cpm[,8])
plot(counts2_cpm[,9], counts2_cpm[,10])
plot(counts2_cpm[,11], counts2_cpm[,12])
plot(counts2_cpm[,13], counts2_cpm[,14])
plot(counts2_cpm[,15], counts2_cpm[,16])
plot(counts2_cpm[,17], counts2_cpm[,18])
plot(counts2_cpm[,19], counts2_cpm[,20])
plot(counts2_cpm[,21], counts2_cpm[,22])
plot(counts2_cpm[,23], counts2_cpm[,24])
plot(counts2_cpm[,25], counts2_cpm[,26])
plot(counts2_cpm[,27], counts2_cpm[,28])
plot(counts2_cpm[,29], counts2_cpm[,30])
plot(counts2_cpm[,31], counts2_cpm[,32])
plot(counts2_cpm[,33], counts2_cpm[,34])
plot(counts2_cpm[,35], counts2_cpm[,36])
plot(counts2_cpm[,37], counts2_cpm[,38])
plot(counts2_cpm[,39], counts2_cpm[,40])
plot(counts2_cpm[,41], counts2_cpm[,42])
plot(counts2_cpm[,43], counts2_cpm[,44])
plot(counts2_cpm[,45], counts2_cpm[,46])
plot(counts2_cpm[,47], counts2_cpm[,48])
plot(counts2_cpm[,49], counts2_cpm[,50])
plot(counts2_cpm[,51], counts2_cpm[,52])
plot(resid103)
plot(resid103)
plot(resid104)
plot(x, y)
text(x, y, labels = row.names(resid_t_binary), cex=.7)
data <- read.delim("~/snpEff/data3-2.txt", header=FALSE)
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("~/snpEff/header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
View(counts2_cpm)
princomp(counts2_cpm)
pca_normCounts <- princomp(counts2_cpm)
data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
pca_normCounts <- princomp(counts2_cpm)
plot(pca_normCounts)
summary(counts2_cpm)
biplot(counts2_cpm)
biplot(prcomp(counts2_cpm, scale = TRUE))
summary(pca_normCounts)
biplot(pca_normCounts)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=T
gy
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
#plot residuals
pca <- princomp(resid_all)
biplot(pca)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
pca <- princomp(resid_all)
biplot(pca)
pca$Comp.2
View(resid_all)
resid_t <- t(resid_all)
pca <- princomp(resid_t)
data <- read.delim("~/snpEff/data3-2.txt", header=FALSE)
# Since the base counts were split into four columns, these need
# to be summed
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
#The resulting file needs to be transposed and turned into a dataframe
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("~/snpEff/header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
plotMDS(counts2)
counts2 <- equalizeLibSizes(counts)
counts2$samples
summary(counts2$pseudo.counts)
?cpm
setwd("~/Documents/Projects/PoritesRADseq/Branching-Porites/analyses/ipyrad_analysis/data3_outfiles")
ustr <- read.delim("data3.u.str", header=FALSE)
ddata <- ustr[,colSums(is.na(ustr))<nrow(ustr)]
#Vector of  unlinkedSNP IDs corresponding to data3.snps.map
unlinkedsnps <- read.delim("loc_id4.txt", header=FALSE)
unlinkedsnps2 <- t(unlinkedsnps)
ddata2 <- ddata[,2:11823]
colnames(ddata2) <- unlinkedsnps2
ddata3 <- cbind(ddata[,1],ddata2)
ddata4 <- t(ddata3)
ddata5 <- as.data.frame(ddata4)
#Extract only ddRAD data
ddata6 <- ddata5[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
ddata7 <- ddata6[!rowSums(ddata6 == -9) >= 1,]
ddata8 <-t(ddata7)
rownames(ddata8) <- ddata8[,1]
ddata9 <- ddata8[,2:1114]
write.table(ddata9, file = "data3-2.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
View(ddata9)
View(ddata7)
View(ddata5)
ddata6 <- ddata5[!rowSums(ddata6 == -9) >= 1,]
View(ddata6)
ddata6 <- ddata5[!rowSums(ddata5 == -9) >= 1,]
View(ddata6)
View(ddata5)
ddata5 <- as.data.frame(ddata4)
View(ddata5)
ddata10 <- ddata5[,c(5:40,47:66,69:110)]
View(ddata10)
View(ddata9)
ddata10 <- ddata5[,c(5:40,47:66,69:112)]
ddata11 <- ddata10[!rowSums(ddata10 == -9) >= 1,]
View(ddata11)
ddata12 <-t(ddata11)
rownames(ddata12) <- ddata12[,1]
View(ddata12)
View(ddata11)
ddata13 <- ddata12[,2:892]
write.table(ddata13, file = "data3-epidd.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
library("adegenet")
library("ade4")
epidd_genind1 <- read.structure("data3-epidd.str", n.ind = 50, n.loc = 892,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
#Fst
View(ddata13)
ddata13 <- ddata12[,2:893]
write.table(ddata13, file = "data3-epidd.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
epidd_genind1 <- read.structure("data3-epidd.str", n.ind = 50, n.loc = 892,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
library("hierfstat")
epidd_groups <- find.clusters(epidd_genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
epidd_dapc1 <- dapc(epidd_genind1, pop = epidd_groups$grp)
epidd_dapc1 <- dapc(epidd_genind1, pop = epidd_groups$grp)
scatter(epidd_dapc1, posi.da = "bottomleft", scree.pca = TRUE, posi.pca = "bottomright")
epidd_groups$grp
epidd_groups <- find.clusters(epidd_genind1, max.n.clust=10, n.pca = 24)
epidd_dapc1 <- dapc(epidd_genind1, pop = epidd_groups$grp)
epidd_dapc1 <- dapc(epidd_genind1, pop = epidd_groups$grp)
scatter(epidd_dapc1, posi.da = "bottomleft", scree.pca = TRUE, posi.pca = "bottomright")
epidd_groups$grp
geno1 <- read.table("data3.u.geno", colClasses = 'character', header = FALSE)
geno2 <- read.fwf("data3.u.geno", widths=rep(1, max(nchar(geno1$V1))), colClasses = 'numeric', header=FALSE)
header <- read.delim("header_data3.txt", header=FALSE)
names <- t(header)
names2 <-as.vector(names)
colnames(geno2) <- names2
View(geno2)
geno3 <- geno2[,c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
geno4 <- geno3[,c(1,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52)]
View(geno3)
geno6 <- geno2[,c(3:20,24:33,35:56)]
geno7 <- geno6[!rowSums(geno6 == 9) >= 1,]
epidd_dist <- dist.gene(geno7, method = "pairwise", pairwise.deletion = FALSE,
variance = FALSE)
library("ape", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
epidd_dist <- dist.gene(geno7, method = "pairwise", pairwise.deletion = FALSE,
variance = FALSE)
plot(hclust(epidd_dist))
head(epidd_dist)
epidd_dist <- dist.gene(geno7, method = "percentage", pairwise.deletion = FALSE,
variance = FALSE)
head(epidd_dist)
heatmap(epidd_dist)
epidd_dist <- dist.gene(geno7, method = "pairwise", pairwise.deletion = FALSE,
variance = FALSE)
heatmap(epidd_dist)
table.dist(epidd_dist, labels = attr(epidd_dist, "Labels"))
epidd_dist
View(geno7)
geno8 <- t(geno7)
View(geno7)
epidd_dist <- dist.gene(geno8, method = "pairwise", pairwise.deletion = FALSE,
variance = FALSE)
table.dist(epidd_dist, labels = attr(epidd_dist, "Labels"))
epidd_dist
epidd_dist <- dist.gene(geno8, method = "percent", pairwise.deletion = FALSE,
variance = FALSE)
epidd_dist
table.dist(epidd_dist, labels = attr(epidd_dist, "Labels"))
heatmap(epidd_dist)
heatmap(epidd_dist, "Labels")
plot(hclust(epidd_dist))
epidd_dist_Matrix <- as.matrix(epidd_dist)
View(epidd_dist_Matrix)
epidd_dist
mean(epidd_dist)
write.table(epidd_dist, file = "percent_dist", row.names = TRUE, col.names = TRUE, quote = FALSE)
epidd_dist2 <- as.matrix(epidd_dist)
write.table(epidd_dist, file = "percent_dist", row.names = TRUE, col.names = TRUE, quote = FALSE)
write.table(epidd_dist2, file = "percent_dist", row.names = TRUE, col.names = TRUE, quote = FALSE)
View(geno2)
fst <- pairwise.fst(genind1, pop = groups$grp)
fst
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
geno5 <- geno4[!rowSums(geno4 == 9) >= 1,]
head(geno5)
View(geno5)
View(geno4)
View(geno3)
View(geno6)
View(geno7)
View(geno8)
groups$grp
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
groups$grp
View(geno5)
geno_stats <- t(geno5)
View(geno_stats)
geno_stats2 <- cbind(groups$grp, geno_stats)
View(geno_stats2)
SNP_stats <- basic.stats(geno_stats2)
SNP_stats
print(geno_stats2, perloc)
print(geno_stats2)
print.bas.stats(geno_stats2, perloc)
basic.stats(genind1)
pop(genind1) <- groups$grp
basic.stats(genind1)
basic.stats(genind1)$perloc
basic.stats(genind1)$Ho
summary(basic.stats(genind1)$Ho)
summary(basic.stats(genind1)$Fis)
summary(basic.stats(genind1)$Hs)
genet.dist(genind1, method = "WC84")
basic.stats(genind1)
summary(basic.stats(genind1)$Ho)
summary(groups$grp)
summary(basic.stats(genind1)$Hs)
summary(basic.stats(genind1)$Fis)
summary(basic.stats(genind1))
genet.dist(genind1, method = "WC84")
pairwise.WCfst(genind1,diploid=TRUE)
pairwise.fst(genind1)
genet.dist(genind1, method = “Nei87”)
genet.dist(genind1, method = "Nei87")
gending2_df <- genind2df(genind1)
View(gending2_df)
genet.dist(gending2_df, method = "WC84")
View(gending2_df)
gending2_df <- genind2df(genind1, pop = pop)
genet.dist(gending2_df[,2:1114], method = "WC84")
genet.dist(gending2_df[,2:6], method = "WC84")
genet.dist(gending2_df[,2:5], method = "WC84")
gending2_df[,2:5]
gending2_df <- as.numeric(genind2df(genind1, pop = pop))
gending2_df <- as.numeric(genind2df(genind1))
gending2_df <- as.factor(genind2df(genind1))
gending2_df2 <- gending2_df[,2:1114]
View(gending2_df2)
genet.dist(gending2_df2, method = "WC84")
gending2_df2 <- as.numeric(gending2_df[,2:1114])
gending2_df <- genind2df(genind1, sep = "")
View(gending2_df)
genet.dist(gending2_df, method = "WC84")
gending2_df <- genind2df(genind1, sep = ",")
View(gending2_df)
pairwise.fst(genind1)
genind1_df <- genind2hierfstat(genind1,pop=NULL)
View(genind1_df)
test.between(genind1_df, test.lev = groups$grp)
test.between(genind1_df, test.lev = c(1,2,3), rand.unit = groups$grp)
test.g(genind1_df, level = groups$grp)
groups$grp
groups <- as.vector(groups$grp)
test.g(genind1_df, level = groups)
test.g(genind1_df[,2:1114], level = groups)
pairwise.WCfst(genind1_d,diploid=TRUE)
pairwise.WCfst(genind1_df,diploid=TRUE)
sinfo <- read.table("sample_info.txt", colClasses = 'character', header = TRUE)
View(sinfo)
tsinfo <- t(sinfo)
diam <- tsinfo[4,]
scatter(dapc1,1,1)
dapc1 <- dapc(genind1, pop = groups$grp, n.pca=9, n.da = 2)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
dapc1 <- dapc(genind1, pop = groups$grp, n.pca=9, n.da = 2)
scatter(dapc1,1,1)
dapc1_da1 <- dapc1$ind.coord[,1]
sinfo[is.na(sinfo)] <- "U"
View(sinfo)
fit <- lm(na.omit(dapc1_da1 ~ as.numeric(sinfo$V2) + as.factor(sinfo$V3) +
as.factor(sinfo$V4) +as.numeric(sinfo$V5)))
fit <- lm(na.omit(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) +as.numeric(sinfo$diam)))
library(relaimpo)
relimp <- calc.relimp(fit,type=c("lmg","last","first"),
rela=TRUE)
print(relimp)
sinfo <- read.table("sample_info.txt", colClasses = 'character', header = TRUE)
fit <- lm(na.omit(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) +as.numeric(sinfo$diam)))
library(relaimpo)
relimp <- calc.relimp(fit,type=c("lmg","last","first"),
rela=TRUE)
print(relimp)
boot <- boot.relimp(fit, b = 1000, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
boot <- boot.relimp(relimp, b = 1000, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
sinfo[is.na(sinfo)] <- "U"
fit <- lm(na.omit(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) +as.numeric(sinfo$diam)))
library(relaimpo)
relimp <- calc.relimp(fit,type=c("lmg","last","first"),
rela=TRUE)
print(relimp)
boot <- boot.relimp(relimp, b = 1000, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
boot <- boot.relimp(fit, b = 1000, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
boot <- boot.relimp(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) + as.numeric(sinfo$diam), b = 1000, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
boot <- boot.relimp(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) + as.numeric(sinfo$diam), b = 100, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = FALSE)
boot <- boot.relimp(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) + as.numeric(sinfo$diam), b = 100, type = c("lmg", "last", "first"))
boot <- boot.relimp(fit, b = 100, type = c("lmg", "last", "first"))
boot.relimp(fit, type = "lmg", groups = NULL, groupnames=NULL, always = NULL, b=1000)
boot <- boot.relimp(fit, b = 100, type = c("lmg", "last", "first", "pratt"),
rank = TRUE, diff = TRUE, rela = TRUE)
boot <- boot.relimp(fit, b = 100, type = c("lmg", "last", "first"),
rank = TRUE, diff = TRUE, rela = TRUE)
relimp <- calc.relimp(fit,type=c("lmg","last","first", "pmvd"),
rela=TRUE)
relimp <- calc.relimp(fit,type=c("lmg","last","first"),rela=TRUE)
print(relimp)
sinfo <- read.table("sample_info.txt", colClasses = 'character', header = TRUE)
fit <- lm(na.omit(dapc1_da1 ~ as.numeric(sinfo$depth) + as.factor(sinfo$sym) +
as.factor(sinfo$habitat) +as.numeric(sinfo$diam)))
library(relaimpo)
relimp <- calc.relimp(fit,type=c("lmg","last","first"),rela=TRUE)
print(relimp)
View(ddata)
write.table(epidd_dist, file = "percent_dist.txt",
row.names = TRUE, col.names = TRUE, quote = FALSE)
