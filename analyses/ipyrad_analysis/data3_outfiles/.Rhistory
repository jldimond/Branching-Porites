data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
pca_normCounts <- princomp(counts2_cpm)
plot(pca_normCounts)
summary(counts2_cpm)
biplot(counts2_cpm)
biplot(prcomp(counts2_cpm, scale = TRUE))
summary(pca_normCounts)
biplot(pca_normCounts)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=data5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=T
gy
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
lm103 <- lm(counts2_cpm[,2] ~ counts2_cpm[,1])
lm104 <- lm(counts2_cpm[,4] ~ counts2_cpm[,3])
lm105 <- lm(counts2_cpm[,6] ~ counts2_cpm[,5])
lm106 <- lm(counts2_cpm[,8] ~ counts2_cpm[,7])
lm107 <- lm(counts2_cpm[,10] ~ counts2_cpm[,9])
lm108 <- lm(counts2_cpm[,12] ~ counts2_cpm[,11])
lm109 <- lm(counts2_cpm[,14] ~ counts2_cpm[,13])
lm110 <- lm(counts2_cpm[,16] ~ counts2_cpm[,15])
lm111 <- lm(counts2_cpm[,18] ~ counts2_cpm[,17])
lm112 <- lm(counts2_cpm[,20] ~ counts2_cpm[,19])
lm114 <- lm(counts2_cpm[,22] ~ counts2_cpm[,21])
lm115 <- lm(counts2_cpm[,24] ~ counts2_cpm[,23])
lm116 <- lm(counts2_cpm[,26] ~ counts2_cpm[,25])
lm117 <- lm(counts2_cpm[,28] ~ counts2_cpm[,27])
lm118 <- lm(counts2_cpm[,30] ~ counts2_cpm[,29])
lm121 <- lm(counts2_cpm[,32] ~ counts2_cpm[,31])
lm122 <- lm(counts2_cpm[,34] ~ counts2_cpm[,33])
lm123 <- lm(counts2_cpm[,36] ~ counts2_cpm[,35])
lm124 <- lm(counts2_cpm[,38] ~ counts2_cpm[,37])
lm125 <- lm(counts2_cpm[,40] ~ counts2_cpm[,39])
lm126 <- lm(counts2_cpm[,42] ~ counts2_cpm[,41])
lm127 <- lm(counts2_cpm[,44] ~ counts2_cpm[,43])
lm128 <- lm(counts2_cpm[,46] ~ counts2_cpm[,45])
lm129 <- lm(counts2_cpm[,48] ~ counts2_cpm[,47])
lm130 <- lm(counts2_cpm[,50] ~ counts2_cpm[,49])
lm131 <- lm(counts2_cpm[,52] ~ counts2_cpm[,51])
resid103 <- residuals(lm103)
resid104 <- residuals(lm104)
resid105 <- residuals(lm105)
resid106 <- residuals(lm106)
resid107 <- residuals(lm107)
resid108 <- residuals(lm108)
resid109 <- residuals(lm109)
resid110 <- residuals(lm110)
resid111 <- residuals(lm111)
resid112 <- residuals(lm112)
resid114 <- residuals(lm114)
resid115 <- residuals(lm115)
resid116 <- residuals(lm116)
resid117 <- residuals(lm117)
resid118 <- residuals(lm118)
resid121 <- residuals(lm121)
resid122 <- residuals(lm122)
resid123 <- residuals(lm123)
resid124 <- residuals(lm124)
resid125 <- residuals(lm125)
resid126 <- residuals(lm126)
resid127 <- residuals(lm127)
resid128 <- residuals(lm128)
resid129 <- residuals(lm129)
resid130 <- residuals(lm130)
resid131 <- residuals(lm131)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid112, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
#plot residuals
pca <- princomp(resid_all)
biplot(pca)
resid_all <- cbind(resid103, resid104, resid105, resid106, resid107, resid108,
resid109, resid110, resid111, resid114, resid115,
resid116, resid117, resid118, resid121, resid122, resid123,
resid124, resid125, resid126, resid127, resid128, resid129,
resid130, resid131)
pca <- princomp(resid_all)
biplot(pca)
pca$Comp.2
View(resid_all)
resid_t <- t(resid_all)
pca <- princomp(resid_t)
data <- read.delim("~/snpEff/data3-2.txt", header=FALSE)
# Since the base counts were split into four columns, these need
# to be summed
data2 <- t(sapply(seq(4,ncol(data), by=4), function(i) {
indx <- i:(i+3)
rowSums(data[indx[indx <= ncol(data)]])}))
#The resulting file needs to be transposed and turned into a dataframe
data3 <- as.data.frame(t(data2))
#Add header names
header <- read.delim("~/snpEff/header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(data3) <- names
#Select samples of interest (some have very low sample sizes)
data4 <- data3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
data5 <- data4[apply(data4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49,51)],1,
function(z) !any(z==0)),]
data6 <- data5[,c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,
38,40,42,44,46,48,50,52)]
counts <- DGEList(counts=data6)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
plotMDS(counts2)
counts2 <- equalizeLibSizes(counts)
counts2$samples
summary(counts2$pseudo.counts)
?cpm
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
ustr <- read.delim("data3.u.str", header=FALSE)
ddata <- ustr[,colSums(is.na(ustr))<nrow(ustr)]
#Vector of  unlinkedSNP IDs corresponding to data3.snps.map
unlinkedsnps <- read.delim("loc_id4.txt", header=FALSE)
unlinkedsnps2 <- t(unlinkedsnps)
ddata2 <- ddata[,2:11823]
colnames(ddata2) <- unlinkedsnps2
ddata3 <- cbind(ddata[,1],ddata2)
ddata4 <- t(ddata3)
ddata5 <- as.data.frame(ddata4)
#Extract only ddRAD data
ddata6 <- ddata5[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
ddata7 <- ddata6[!rowSums(ddata6 == -9) >= 1,]
ddata8 <-t(ddata7)
rownames(ddata8) <- ddata8[,1]
ddata9 <- ddata8[,2:1114]
write.table(ddata9, file = "data3-2.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
ustr <- read.delim("data3.u.str", header=FALSE)
ddata <- ustr[,colSums(is.na(ustr))<nrow(ustr)]
#Vector of  unlinkedSNP IDs corresponding to data3.snps.map
unlinkedsnps <- read.delim("loc_id4.txt", header=FALSE)
unlinkedsnps2 <- t(unlinkedsnps)
ddata2 <- ddata[,2:11823]
colnames(ddata2) <- unlinkedsnps2
ddata3 <- cbind(ddata[,1],ddata2)
ddata4 <- t(ddata3)
ddata5 <- as.data.frame(ddata4)
#Extract only ddRAD data
ddata6 <- ddata5[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
ddata7 <- ddata6[!rowSums(ddata6 == -9) >= 1,]
ddata8 <-t(ddata7)
rownames(ddata8) <- ddata8[,1]
ddata9 <- ddata8[,2:1114]
setwd("~/Documents/Projects/PoritesRADseq/Branching-Porites/analyses/ipyrad_analysis/data3_outfiles")
ustr <- read.delim("data3.u.str", header=FALSE)
ddata <- ustr[,colSums(is.na(ustr))<nrow(ustr)]
#Vector of  unlinkedSNP IDs corresponding to data3.snps.map
unlinkedsnps <- read.delim("loc_id4.txt", header=FALSE)
unlinkedsnps2 <- t(unlinkedsnps)
ddata2 <- ddata[,2:11823]
colnames(ddata2) <- unlinkedsnps2
ddata3 <- cbind(ddata[,1],ddata2)
ddata4 <- t(ddata3)
ddata5 <- as.data.frame(ddata4)
#Extract only ddRAD data
ddata6 <- ddata5[,c(1,2,5,6,9,10,13,14,17,18,21,22,25,26,29,30,33,34,37,38,41,42,47,48,51,52,55,56,59,60,63,64,69,70,73,74,77,78,81,82,85,86,89,90,93,94,97,98,101,102,105,106,109,110)]
#Remove any SNPs with missing data (-9 is the NA value)
ddata7 <- ddata6[!rowSums(ddata6 == -9) >= 1,]
ddata8 <-t(ddata7)
rownames(ddata8) <- ddata8[,1]
ddata9 <- ddata8[,2:1114]
write.table(ddata9, file = "data3-2.str", row.names = TRUE, col.names = TRUE, quote = FALSE)
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
library("adegenet")
library("ade4")
genind1 <- read.structure("data3-2.str", n.ind = 27, n.loc = 1113,
onerowperind = FALSE, col.lab = 1,
NA.char = "-9", ask = FALSE,
row.marknames = 1, quiet = FALSE)
groups <- find.clusters(genind1, max.n.clust=10, n.pca = 24,
choose.n.clust = FALSE, criterion = "min")
dapc1 <- dapc(genind1, pop = groups$grp, n.pca=9, n.da = 2)
head(dapc1$var.contr)
loci.test <- unique(gsub("\\..*","",dapc1$var.contr))
contrib <- loadingplot(dapc1$var.contr, axis=1,
threshold= quantile(dapc1$var.contr,0.90), lab.jitter=1)
cont <- dapc1$var.contr[,1]
head(cont)
loci.test <- unique(gsub("\\..*","",cont))
loci.test <- gsub("\\..*","",cont)
head(loci.test)
cont <- as.matrix(dapc1$var.contr[,1])
View(cont)
loci.test <- gsub("\\..*","",cont)
head(loci.test)
loci.test <- gsub("\\.*","",cont)
loci.test <- gsub("\\.*","",rownames(cont))
loci.test <- gsub("\\..*","",rownames(cont))
loci.1 <- cbind(loci.names, cont)
loci.names <- gsub("\\..*","",rownames(cont))
loci.1 <- cbind(loci.names, cont)
View(loci.1)
loci.1 <- unique(cbind(loci.names, cont))
View(loci.1)
loci.2 <- unique(loci.1$V1)
loci.2 <- unique(loci.1$loci.names)
loci.2 <- unique(loci.1[,1])
loci.2 <- unique(loci.1)
loci.2 <- loci.1[row.names(unique(dat[,c("loci.names")])),]
loci.2 <- loci.1[row.names(unique(loci.1[,c("loci.names")])),]
View(loci.2)
loci.2 <- loci.1[row.names(unique(loci.1[,1])),]
loci.2 <- loci.1(unique(loci.1[,1]))
loci.2 <-  loci.1[!duplicated(loci.1[,1]),]
loci.Epi <- colnames(resid_t_diff)
View(loci.2)
Epidata <- read.delim("data3-2.txt", header=FALSE)
#Since the base counts were split into four columns for each base, these need
#to be summed
Epidata2 <- t(sapply(seq(4,ncol(Epidata), by=4), function(i) {
indx <- i:(i+3)
rowSums(Epidata[indx[indx <= ncol(Epidata)]])}))
#The resulting file needs to be transposed and turned into a dataframe
Epidata3 <- as.data.frame(t(Epidata2))
#Add column with locus number (CHROM from .vcf file)
locus <- Epidata[,1]
row.names(Epidata3) <- locus
#Add header names
header <- read.delim("header_data3.txt", header=FALSE)
names <- as.vector(t(header))
colnames(Epidata3) <- names
#Select samples of interest (some have very low sample sizes)
Epidata4 <- Epidata3[,c(3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56)]
#Remove ddr rows that have any zeros. The premise here is that zeros
#in the EpiRAD dataset are informative because they may reflect
#methylation, but they could also relfect true absence of the locus
#in the library. Here the ddRAD library serves to standarize the EpiRAD
#library. Any zeros in the ddRAD libary are treated as absence of the
#locus, thereby leaving zeros in the EpiRAD library only where the
#locus was counted in the ddRAD library.
Epidata5 <- Epidata4[apply(Epidata4[c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,
31,33,35,37,39,41,43,45,47,49)],1,
function(z) !any(z<=10)),] #increased from z==0
library("edgeR")
#read in the file to edgeR
counts <- DGEList(counts=Epidata5)
counts$samples
#TMM normalization (corrects for library size)
counts2 <- calcNormFactors(counts)
counts2$samples
#extract normalized counts
counts2_cpm <- cpm(counts2, normalized.lib.sizes=TRUE, log=TRUE)
##Plots to show ddRAD vs EpiRAD library (before normalization)
par(mfrow = c(5, 5))
par(mar = c(2, 2 ,2 ,2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,49, by = 2)){
plot(Epidata5[,i], Epidata5[,i+1], main = colnames(Epidata5[i]), col = "blue")
}
#plot normalized counts
par(mfrow = c(5, 5))
par(mar = c(2, 2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in seq(1,49, by = 2)){
plot(counts2_cpm[,i], counts2_cpm[,i+1], main = colnames(counts2_cpm[i]), col = "blue")
}
##################################################################
#Using lm to get residuals
models <- list()
for (i in seq(1,49, by = 2)){
models[[colnames(counts2_cpm)[i]]] <- lm(counts2_cpm[,i+1] ~ counts2_cpm[,i])
}
residuals <- lapply(models, '[[', 2)
resid_all <- as.data.frame(residuals)
#plot residuals
par(mfrow = c(5, 5))
par(mar = c(2,2, 2, 2), oma = c(4, 4, 0.5, 0.5))
for (i in 1:25){
plot(resid_all[,i], col = "blue")
}
#Plot to compare raw data to residuals
par(mfrow = c(2, 1))
par(mar = c(4, 4.5, 2, 1), oma = c(1, 1, 0, 0))
plot(Epidata5[,13], Epidata5[,14], xlab = "ddRAD read counts", ylab = "EpiRAD read counts", col = "blue")
plot(resid_all[,7], ylab = "Residual", col = "blue")
mtext('A', side=3, line=-1.6, at = 0.2, outer=TRUE)
mtext('B', side=3, line=-16.8, at = 0.2, outer=TRUE)
#################################################################
#Make binary dataset of EpiRAD data based on residuals <=-1
#All methylated loci converted to 1, nonmethylated to zero
resid_all_binary <- ifelse(resid_all<=-1, 1, 0)
#proportion of methylated cutsites
prop_methyl <- colSums(resid_all_binary) / nrow(resid_all_binary)
barplot(prop_methyl)
dens <- density(prop_methyl)
plot(dens)
mean(prop_methyl)
sd(prop_methyl)
#Get only rows that are differentially methylated
resid1 <- resid_all_binary[rowSums(resid_all_binary) < 25, ]
resid2 <- resid1[rowSums(resid1) >= 1, ]
resid_t_diff <- t(resid2)
View(resid_t_diff)
View(resid2)
loci.Epi <- rownames(resid2)
loci.both <- intersect(loci.2,loci.Epi)
View(loci.2)
loci.both <- merge(loci.2,loci.Epi, by.x = "loci.names")
loci.Epi <- as.matrix(rownames(resid2))
View(loci.Epi)
loci.both <- merge(loci.2,loci.Epi, by.x = "loci.names", by.y = "V1")
View(loci.both)
loci.all.dens <- density(dapc1$var.contr[,1])
plot(loci.all.dens)
loci.epi.dens <- density(loci.Epi)
loci.epi.dens <- density(loci.both)
loci.epi.dens <- density(loci.both$V2)
loci.epi.dens <- density(loci.both[,2])
loci.epi.dens <- density(loci.both[,1])
loci.epi.dens <- density(as.numeric(loci.both[,2]))
plot(loci.all.dens)
plot(loci.epi.dens)
plot(loci.all.dens)
head(loci.both[,2])
head(loci.both$V2)
head(loci.both$V1)
loci.Epi2 <- as.numeric(loci.both)
loci.Epi2 <- as.numeric(loci.both$V2)
loci.Epi2 <- loci.both[,2]
loci.Epi2 <- as.numeric(loci.both[,2])
head(loci.Epi2)
loci.Epi2 <- loci.both[,2]
loci.Epi3 <- as.numeric(loci.Epi2)
loci.Epi2
loci.both <- as.matrix(merge(loci.2,loci.Epi, by.x = "loci.names", by.y = "V1"))
View(loci.both)
loci.Epi2 <- loci.both[,2]
loci.Epi2 <- as.numeric(loci.both[,2])
loci.epi.dens <- density(loci.Epi2)
plot(loci.epi.dens)
plot(loci.all.dens)
lines(loci.epi.dens)
View(loci.2)
loci.all.dens <- density(loci.2)
loci.all.dens <- density(as.numeric(loci.2))
plot(loci.all.dens)
lines(loci.epi.dens)
loci.all <- as.numeric(loci.2)
View(loci.2)
loci.all <- as.numeric(loci.2[,2])
loci.all.dens <- density(loci.all)
loci.epi.dens <- density(loci.Epi2)
plot(loci.all.dens)
lines(loci.epi.dens)
plot(loci.all.dens, col = "green")
lines(loci.epi.dens, col = "blue")
plot(loci.all.dens, col = "blue")
lines(loci.epi.dens, col = "red")
plot(loci.all.dens, col = "blue", xlab = "Locus contribution")
lines(loci.epi.dens, col = "red")
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC")
lines(loci.epi.dens, col = "red")
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1")
lines(loci.epi.dens, col = "red")
locator()
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = FALSE)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NULL)
lines(loci.epi.dens, col = "red")
legend(0.00660726, 4794.16)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NULL)
lines(loci.epi.dens, col = "red")
legend(0.00660726, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"))
locator()
legend(0.003060227, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"))
legend(0.003060227, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"), border = NULL, lty = 1)
legend(0.003060227, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"), border = FALSE, lty = 1)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NULL)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"), border = FALSE, lty = 1)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("all loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
View(loci.both)
ks <- ks.test(loci.all, loci.Epi2)
random.loci <- loci.all[sample(1:nrow(loci.all), 151,
replace=FALSE),]
random.loci <- sample(1:nrow(loci.all), 151, replace=FALSE)
random.loci <- sample(1:1113, 151, replace=FALSE)
random.loci <- sample(loci.all, 1:1113, 151, replace=FALSE)
random.loci <- sample(loci.all, 151, replace=FALSE)
ks <- ks.test(random.loci, loci.Epi2)
summary(ks)
loci.all.dens <- density(random.loci)
loci.epi.dens <- density(loci.Epi2)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
ks$p.value
random.loci <- sample(loci.all, 151, replace=FALSE)
random.loci.dens <- density(random.loci)
loci.epi.dens <- density(loci.Epi2)
plot(loci.all.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
plot(random.loci.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
random.loci <- sample(loci.all, 151, replace=FALSE)
random.loci.dens <- density(random.loci)
loci.epi.dens <- density(loci.Epi2)
plot(random.loci.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
plot(random.loci.dens, col = "blue", xlab = "Locus contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.003060227, 4794.16, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
locator
locator()
legend(0.001667958, 2882.674, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
plot(random.loci.dens, col = "blue", xlab = "Contribution to DAPC axis 1", main = NA)
lines(loci.epi.dens, col = "red")
legend(0.001667958, 2882.674, legend = c("random sample of loci", "differentially methylated loci"),
col = c("blue", "red"), bty = "n", lty = 1)
